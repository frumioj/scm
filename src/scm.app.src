%%% -*- mode: erlang -*-

%%% The MIT License
%%%
%%% Copyright (C) 2013-2015 by Joseph Wayne Norton <norton@alum.mit.edu>
%%%
%%% Permission is hereby granted, free of charge, to any person obtaining a copy
%%% of this software and associated documentation files (the "Software"), to deal
%%% in the Software without restriction, including without limitation the rights
%%% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
%%% copies of the Software, and to permit persons to whom the Software is
%%% furnished to do so, subject to the following conditions:
%%%
%%% The above copyright notice and this permission notice shall be included in
%%% all copies or substantial portions of the Software.
%%%
%%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
%%% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
%%% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
%%% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
%%% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
%%% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
%%% THE SOFTWARE.

{application, scm,
 [{description, "The Concurrent Schemer"},
  {id, scm},
  {vsn, git},
  {modules, [scm_app, scm_sup,
             scmd,
             scmd_parse, scmd_parse_numR,
             scmd_scan, scmd_scan_num16, scmd_scan_num10, scmd_scan_num8, scmd_scan_num2,
             scmd_types,
             scmi_analyze,
             scmi_analyze_derived,
             scmi_analyze_primitive,
             scmi_analyze_program,
             scmi_analyze_macro,
             scmi_env,
             scmi_eval,
             scmi_iodev,
             scmi_iodev_server_file,
             scmi_iodev_server_ram,
             scmi_iodev_server_std,
             scmi_iodev_server_std_test,
             scmi_types,
             scml,
             scml_base_boolean,
             scml_base_bytevector,
             scml_base_char,
             scml_base_control,
             scml_base_equality,
             scml_base_exception,
             scml_base_io,
             scml_base_list,
             scml_base_number,
             scml_base_string,
             scml_base_symbol,
             scml_base_system,
             scml_base_vector,
             scml_char,
             scml_complex,
             scml_context,
             scml_cxr,
             scml_eval,
             scml_file,
             scml_inexact,
             scml_lambda,
             scml_lazy,
             scml_load,
             scml_r5rs,
             scml_read,
             scml_repl,
             scml_time,
             scml_write,
             scmtmp]},
  {included_applications, [parsetools]},
  {applications, [kernel, stdlib, sasl]},
  {env, []},
  {mod, {scm_app, []}}
 ]}.
